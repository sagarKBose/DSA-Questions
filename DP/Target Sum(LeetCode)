class Solution {
    public int findTargetSumWays(int[] nums, int S) {
        
        int total_sum = 0, cnt = 0;
        for(int i=0;i<nums.length;i++)
        {
            total_sum+=nums[i];
            if(nums[i]==0)
                cnt++;
        }
        
        if(S>total_sum) return 0;
        
        if((S+total_sum)%2!=0) return 0;
        
        int sum = (S + total_sum)/2;
        
        int n = nums.length;
        int dp[][] = new int[n+1][sum+1];
        
        for(int i=0;i<=n;i++) dp[i][0] = 1;
        for(int i=1;i<=sum;i++) dp[0][i] = 0;
        
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=sum;j++)
            {  
                if(nums[i-1]==0)
                    dp[i][j] = dp[i-1][j];
                else if(nums[i-1]>j)
                    dp[i][j] = dp[i-1][j];
                else
                    dp[i][j] = dp[i-1][j]+ dp[i-1][j-nums[i-1]];
            }
        }
        
        return ((int)Math.pow(2,cnt))*(dp[n][sum]);
    }
}
